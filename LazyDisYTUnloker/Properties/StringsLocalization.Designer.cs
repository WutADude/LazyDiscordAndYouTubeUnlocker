//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LazyDisYTUnlocker.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class StringsLocalization {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal StringsLocalization() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("LazyDisYTUnlocker.Properties.StringsLocalization", typeof(StringsLocalization).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Важно, и очень :О.
        /// </summary>
        internal static string AdminRightsMessageCaption {
            get {
                return ResourceManager.GetString("AdminRightsMessageCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Для работы нужны права администратора!.
        /// </summary>
        internal static string AdminRightsMessageText {
            get {
                return ResourceManager.GetString("AdminRightsMessageText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Приложение уже запущено, нет смысла запускать несколько экземпляров..
        /// </summary>
        internal static string AppAlreadyExistsMessage {
            get {
                return ResourceManager.GetString("AppAlreadyExistsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Приложение уже запущено!.
        /// </summary>
        internal static string AppAlreadyExistsMessageCaption {
            get {
                return ResourceManager.GetString("AppAlreadyExistsMessageCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось отключить автозапуск!
        ///
        ///Ошибка: %error%.
        /// </summary>
        internal static string AutoRunDisableError {
            get {
                return ResourceManager.GetString("AutoRunDisableError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось включить автозапуск!
        ///
        ///Ошибка: %error%.
        /// </summary>
        internal static string AutoRunEnableError {
            get {
                return ResourceManager.GetString("AutoRunEnableError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка автозапуска.
        /// </summary>
        internal static string AutoRunErrorMessageCaption {
            get {
                return ResourceManager.GetString("AutoRunErrorMessageCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось получить статус автозапуска!
        ///
        ///Ошибка: %error%.
        /// </summary>
        internal static string AutoRunStatusError {
            get {
                return ResourceManager.GetString("AutoRunStatusError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Число доменов Discord: %count%.
        /// </summary>
        internal static string DiscordDomainsCountLabel {
            get {
                return ResourceManager.GetString("DiscordDomainsCountLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Число доступных стратегий Discord: %available% | Выбранная стратегия: №%selected%.
        /// </summary>
        internal static string DiscordStrategiesLabel {
            get {
                return ResourceManager.GetString("DiscordStrategiesLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на скачиваю/проверяю файлы и обновляю стратегии....
        /// </summary>
        internal static string DownloadFilesAndStrategiesStatus {
            get {
                return ResourceManager.GetString("DownloadFilesAndStrategiesStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Запустить.
        /// </summary>
        internal static string MainButtonStartText {
            get {
                return ResourceManager.GetString("MainButtonStartText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Остановить.
        /// </summary>
        internal static string MainButtonStopText {
            get {
                return ResourceManager.GetString("MainButtonStopText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на работает :О.
        /// </summary>
        internal static string MainStatusEureekaWorking {
            get {
                return ResourceManager.GetString("MainStatusEureekaWorking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на готов к работе.
        /// </summary>
        internal static string MainStatusReadyToWork {
            get {
                return ResourceManager.GetString("MainStatusReadyToWork", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на проверяю версию лаунчера....
        /// </summary>
        internal static string MainStatusSoftwareVersionCheck {
            get {
                return ResourceManager.GetString("MainStatusSoftwareVersionCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на что-то не то....
        /// </summary>
        internal static string MainStatusSomethingWentWrong {
            get {
                return ResourceManager.GetString("MainStatusSomethingWentWrong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Спрячусь здесь!.
        /// </summary>
        internal static string NotificonMessage {
            get {
                return ResourceManager.GetString("NotificonMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ох ё!.
        /// </summary>
        internal static string ProcessManagerStartErrorCaption {
            get {
                return ResourceManager.GetString("ProcessManagerStartErrorCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось запустить обход!
        ///
        ///Ошибка: %error%.
        /// </summary>
        internal static string ProcessManagerStartErrorText {
            get {
                return ResourceManager.GetString("ProcessManagerStartErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Текущая версия: %current% (актуальная: %latest%).
        /// </summary>
        internal static string SoftwareVersionLabel {
            get {
                return ResourceManager.GetString("SoftwareVersionLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на обновляю стратегии....
        /// </summary>
        internal static string StrategiesUpdate {
            get {
                return ResourceManager.GetString("StrategiesUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Дата последнего обновления стратегий: %date%.
        /// </summary>
        internal static string StrategiesUpdateDateLabel {
            get {
                return ResourceManager.GetString("StrategiesUpdateDateLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка при получении/обновлении стратегий.
        /// </summary>
        internal static string StrategiesUpdateErrorMessageCaption {
            get {
                return ResourceManager.GetString("StrategiesUpdateErrorMessageCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на При получении/обновлении стратегий обхода произошла ошибка: %error%.
        /// </summary>
        internal static string StrategiesUpdateErrorMessageText {
            get {
                return ResourceManager.GetString("StrategiesUpdateErrorMessageText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Произошла необработанная ошибка!
        ///
        ///Ошибка: %error%.
        /// </summary>
        internal static string UnhandledErrorMessage {
            get {
                return ResourceManager.GetString("UnhandledErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Необработанная ошибка!.
        /// </summary>
        internal static string UnhandledErrorMessageCaption {
            get {
                return ResourceManager.GetString("UnhandledErrorMessageCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Число доменов ваших сервисов: %count%.
        /// </summary>
        internal static string USDomainsCountLabel {
            get {
                return ResourceManager.GetString("USDomainsCountLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ну чтож... как хотите!.
        /// </summary>
        internal static string UserZapretInfoCaption {
            get {
                return ResourceManager.GetString("UserZapretInfoCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Без этого ничего работать не будет, но это ваше право :)
        ///
        ///Если передумаете - просто перезапустите программу!.
        /// </summary>
        internal static string UserZapretInfoText {
            get {
                return ResourceManager.GetString("UserZapretInfoText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ваши сервисы изменены..
        /// </summary>
        internal static string USSavingMessageCaption {
            get {
                return ResourceManager.GetString("USSavingMessageCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Изменения ваших сервисов успешно сохранены!.
        /// </summary>
        internal static string USSavingMessageText {
            get {
                return ResourceManager.GetString("USSavingMessageText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Число доступных стратегий для ваших сервисов: %available% | Выбранная стратегия: №%selected%.
        /// </summary>
        internal static string USStrategiesCountLabel {
            get {
                return ResourceManager.GetString("USStrategiesCountLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Пора нанимать нового хитмана....
        /// </summary>
        internal static string WindivertKillErrorCaption {
            get {
                return ResourceManager.GetString("WindivertKillErrorCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось убить службу Windivert.
        ///
        ///Ошибка: %error%.
        /// </summary>
        internal static string WindivertKillErrorText {
            get {
                return ResourceManager.GetString("WindivertKillErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Число доменов YouTube: %count%.
        /// </summary>
        internal static string YouTubeDomainsCountLabel {
            get {
                return ResourceManager.GetString("YouTubeDomainsCountLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Число доступных стратегий YouTube: %available% | Выбранная стратегия: №%selected%.
        /// </summary>
        internal static string YouTubeStrategiesLabel {
            get {
                return ResourceManager.GetString("YouTubeStrategiesLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на загружаю %progress%%.
        /// </summary>
        internal static string ZapretDownloadingProgress {
            get {
                return ResourceManager.GetString("ZapretDownloadingProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Чего-то не хватает, но чего?.
        /// </summary>
        internal static string ZapretLoadMessageCaption {
            get {
                return ResourceManager.GetString("ZapretLoadMessageCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Для работы нужно догрузить &quot;Zapret&quot; и подготовить кое какие файлы, делаем?.
        /// </summary>
        internal static string ZapretLoadMessageText {
            get {
                return ResourceManager.GetString("ZapretLoadMessageText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Привожу файлы &quot;Zapret&quot; к новому виду....
        /// </summary>
        internal static string ZapretMovingStatus {
            get {
                return ResourceManager.GetString("ZapretMovingStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на не загружен и не готов к работе.
        /// </summary>
        internal static string ZapretNotReadyToWorkStatus {
            get {
                return ResourceManager.GetString("ZapretNotReadyToWorkStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Процессы &quot;Zapret&quot; по какой-то причине были остановлены..
        /// </summary>
        internal static string ZapretProcessesClosed {
            get {
                return ResourceManager.GetString("ZapretProcessesClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на готов к работе.
        /// </summary>
        internal static string ZapretReadyToWorkStatus {
            get {
                return ResourceManager.GetString("ZapretReadyToWorkStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Состояние Zapret: %status%.
        /// </summary>
        internal static string ZapretStatusMain {
            get {
                return ResourceManager.GetString("ZapretStatusMain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на распаковываю и подготавливаю....
        /// </summary>
        internal static string ZapretUnpackingAndPreparing {
            get {
                return ResourceManager.GetString("ZapretUnpackingAndPreparing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на не получилось загрузить или распаковать Zapret :(.
        /// </summary>
        internal static string ZapretUnsuccessfullDownloadAndPrepare {
            get {
                return ResourceManager.GetString("ZapretUnsuccessfullDownloadAndPrepare", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Так, обновления не будет!.
        /// </summary>
        internal static string ZapretUpdateErrorMessageCaption {
            get {
                return ResourceManager.GetString("ZapretUpdateErrorMessageCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось обновить Zapret!
        ///
        ///Ошибка: %error%.
        /// </summary>
        internal static string ZapretUpdateErrorMessageText {
            get {
                return ResourceManager.GetString("ZapretUpdateErrorMessageText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на скачиваю/проверяю файлы....
        /// </summary>
        internal static string ZapretUpdateStatus {
            get {
                return ResourceManager.GetString("ZapretUpdateStatus", resourceCulture);
            }
        }
    }
}
