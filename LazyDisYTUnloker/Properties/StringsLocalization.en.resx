<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ZapretLoadMessageCaption" xml:space="preserve">
    <value>Something is missing, but what?</value>
  </data>
  <data name="ZapretLoadMessageText" xml:space="preserve">
    <value>To work, software need to download "Zapret" and prepare some files, are we doing it?</value>
  </data>
  <data name="DownloadFilesAndStrategiesStatus" xml:space="preserve">
    <value>downloading/checking files and update strategies...</value>
  </data>
  <data name="ZapretReadyToWorkStatus" xml:space="preserve">
    <value>ready to work</value>
  </data>
  <data name="ZapretNotReadyToWorkStatus" xml:space="preserve">
    <value>don't downloaded and not ready to work</value>
  </data>
  <data name="ZapretDownloadingProgress" xml:space="preserve">
    <value>downloading %progress%%</value>
  </data>
  <data name="ZapretUnpackingAndPreparing" xml:space="preserve">
    <value>unpacking and preparing...</value>
  </data>
  <data name="ZapretUnsuccessfullDownloadAndPrepare" xml:space="preserve">
    <value>couldn't download or unpack "Zapret" :(</value>
  </data>
  <data name="ZapretStatusMain" xml:space="preserve">
    <value>"Zapret" status: %status%</value>
  </data>
  <data name="DiscordDomainsCountLabel" xml:space="preserve">
    <value>Discord domains count: %count%</value>
  </data>
  <data name="YouTubeDomainsCountLabel" xml:space="preserve">
    <value>YouTube domains count: %count%</value>
  </data>
  <data name="StrategiesUpdateDateLabel" xml:space="preserve">
    <value>Date of the last update of the strategies: %date%</value>
  </data>
  <data name="SoftwareVersionLabel" xml:space="preserve">
    <value>Current version: %current% (latest: %latest%)</value>
  </data>
  <data name="YouTubeStrategiesLabel" xml:space="preserve">
    <value>Count of YouTube strategies available: %available% | Selected strategy: №%selected%</value>
  </data>
  <data name="DiscordStrategiesLabel" xml:space="preserve">
    <value>Count of Discord strategies available: %available% | Selected strategy: №%selected%</value>
  </data>
  <data name="ZapretUpdateStatus" xml:space="preserve">
    <value>downloading/checking files...</value>
  </data>
  <data name="MainStatusReadyToWork" xml:space="preserve">
    <value>ready to work</value>
  </data>
  <data name="MainStatusSomethingWentWrong" xml:space="preserve">
    <value>something went wrong....</value>
  </data>
  <data name="ZapretUpdateErrorMessageText" xml:space="preserve">
    <value>Failed to update Zapret!

Error: %error%</value>
  </data>
  <data name="ZapretUpdateErrorMessageCaption" xml:space="preserve">
    <value>So, there will be no update!</value>
  </data>
  <data name="NotificonMessage" xml:space="preserve">
    <value>I'll hide here!</value>
  </data>
  <data name="StrategiesUpdate" xml:space="preserve">
    <value>updating strategies...</value>
  </data>
  <data name="MainStatusEureekaWorking" xml:space="preserve">
    <value>working :O</value>
  </data>
  <data name="MainButtonStopText" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="MainButtonStartText" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="UserZapretInfoText" xml:space="preserve">
    <value>Nothing will work without it, but it's your right :)

If you change your mind, just restart the program!</value>
  </data>
  <data name="UserZapretInfoCaption" xml:space="preserve">
    <value>Well that... As you wish!</value>
  </data>
  <data name="StrategiesUpdateErrorMessageText" xml:space="preserve">
    <value>An error occurred while receiving/updating crawl strategies: %error%</value>
  </data>
  <data name="StrategiesUpdateErrorMessageCaption" xml:space="preserve">
    <value>Error when receiving/updating strategies</value>
  </data>
  <data name="MainStatusSoftwareVersionCheck" xml:space="preserve">
    <value>I'm checking the launcher version...</value>
  </data>
  <data name="ProcessManagerStartErrorText" xml:space="preserve">
    <value>Failed to start the crawl!

Error: %error%</value>
  </data>
  <data name="ProcessManagerStartErrorCaption" xml:space="preserve">
    <value>Oh damn!</value>
  </data>
  <data name="WindivertKillErrorText" xml:space="preserve">
    <value>Failed to kill the Windivert service.

Error: %error%</value>
  </data>
  <data name="WindivertKillErrorCaption" xml:space="preserve">
    <value>It's time to hire a new hitman...</value>
  </data>
  <data name="AdminRightsMessageText" xml:space="preserve">
    <value>You need administrator rights to work!</value>
  </data>
  <data name="AdminRightsMessageCaption" xml:space="preserve">
    <value>It's really important :O</value>
  </data>
  <data name="USDomainsCountLabel" xml:space="preserve">
    <value>Your services domains count: %count%</value>
  </data>
  <data name="USStrategiesCountLabel" xml:space="preserve">
    <value>Count of available strategies for your services: %available% | Selected strategy: №%selected%</value>
  </data>
  <data name="USSavingMessageText" xml:space="preserve">
    <value>Your services changes saved successfully!</value>
  </data>
  <data name="USSavingMessageCaption" xml:space="preserve">
    <value>Your services changed.</value>
  </data>
  <data name="ZapretMovingStatus" xml:space="preserve">
    <value>Bringing the "Zapret" files to a new look...</value>
  </data>
  <data name="ZapretProcessesClosed" xml:space="preserve">
    <value>"Zapret" processes were stopped for some reason, possibly due to errors in strategies, or by external programs.</value>
  </data>
  <data name="AutoRunStatusError" xml:space="preserve">
    <value>Couldn't get the autorun status!

Error: %error%</value>
  </data>
  <data name="AutoRunEnableError" xml:space="preserve">
    <value>Couldn't enable autorun!

Error: %error%</value>
  </data>
  <data name="AutoRunDisableError" xml:space="preserve">
    <value>Couldn't disable autorun!

Error: %error%</value>
  </data>
  <data name="AutoRunErrorMessageCaption" xml:space="preserve">
    <value>AutoRun error</value>
  </data>
  <data name="UnhandledErrorMessageCaption" xml:space="preserve">
    <value>Unhandled error!</value>
  </data>
  <data name="UnhandledErrorMessage" xml:space="preserve">
    <value>Unhandled error has occurred!

Error: %error%</value>
  </data>
  <data name="AppAlreadyExistsMessageCaption" xml:space="preserve">
    <value>Application already running!</value>
  </data>
  <data name="AppAlreadyExistsMessage" xml:space="preserve">
    <value>The application is already running, there is no point in running multiple instances.</value>
  </data>
</root>